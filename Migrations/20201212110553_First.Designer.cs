// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using carshop.webui.Models;

namespace carshop.webui.Migrations
{
    [DbContext(typeof(TurboContext))]
    [Migration("20201212110553_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("carshop.webui.Models.AdsImageUrls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdsId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdsId");

                    b.ToTable("AdsImageUrls");
                });

            modelBuilder.Entity("carshop.webui.Models.CarBrands", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Brand_Name")
                        .HasColumnType("varchar(55)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(55)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Car_Brands");
                });

            modelBuilder.Entity("carshop.webui.Models.CarModels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Brand_ID")
                        .HasColumnType("int")
                        .HasDefaultValueSql("('0')");

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(125)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(125)
                        .IsUnicode(false);

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Model_Name")
                        .HasColumnType("varchar(125)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(125)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Car_Models");
                });

            modelBuilder.Entity("carshop.webui.Models.GeneralInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TypeId")
                        .HasColumnName("Type_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("General_Info");
                });

            modelBuilder.Entity("carshop.webui.Models.GeneralType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("General_Type");
                });

            modelBuilder.Entity("carshop.webui.Models.TbAds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AlloyWheels")
                        .HasColumnName("Alloy_Wheels")
                        .HasColumnType("bit");

                    b.Property<bool>("Barter")
                        .HasColumnType("bit");

                    b.Property<int?>("BodyTypeId")
                        .IsRequired()
                        .HasColumnName("Body_Type_ID")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .IsRequired()
                        .HasColumnName("Brand_ID")
                        .HasColumnType("int");

                    b.Property<bool>("CentralClosure")
                        .HasColumnName("Central_Closure")
                        .HasColumnType("bit");

                    b.Property<int?>("CityId")
                        .IsRequired()
                        .HasColumnName("City_ID")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .IsRequired()
                        .HasColumnName("Color_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Conditioner")
                        .HasColumnType("bit");

                    b.Property<bool>("Credit")
                        .HasColumnType("bit");

                    b.Property<int?>("CurrencyId")
                        .IsRequired()
                        .HasColumnName("Currency_ID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("EngineCapacityId")
                        .IsRequired()
                        .HasColumnName("Engine_Capacity_ID")
                        .HasColumnType("int");

                    b.Property<int?>("FuelTypeId")
                        .IsRequired()
                        .HasColumnName("Fuel_Type_ID")
                        .HasColumnType("int");

                    b.Property<int?>("GearboxId")
                        .IsRequired()
                        .HasColumnName("Gearbox_ID")
                        .HasColumnType("int");

                    b.Property<int?>("GraduationYear")
                        .IsRequired()
                        .HasColumnName("Graduation_Year")
                        .HasColumnType("int");

                    b.Property<int?>("Hp")
                        .IsRequired()
                        .HasColumnName("HP")
                        .HasColumnType("int");

                    b.Property<bool>("LeatherSalon")
                        .HasColumnName("Leather_Salon")
                        .HasColumnType("bit");

                    b.Property<bool>("Luke")
                        .HasColumnType("bit");

                    b.Property<int?>("ModelId")
                        .IsRequired()
                        .HasColumnName("Model_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("ParkingRadar")
                        .HasColumnName("Parking_Radar")
                        .HasColumnType("bit");

                    b.Property<int?>("Price")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("RainSensor")
                        .HasColumnName("Rain_Sensor")
                        .HasColumnType("bit");

                    b.Property<bool>("RearCamera")
                        .HasColumnName("Rear_Camera")
                        .HasColumnType("bit");

                    b.Property<bool>("SeatHeating")
                        .HasColumnName("Seat_Heating")
                        .HasColumnType("bit");

                    b.Property<bool>("SeatVentilation")
                        .HasColumnName("Seat_Ventilation")
                        .HasColumnType("bit");

                    b.Property<bool>("SideCurtains")
                        .HasColumnName("Side_Curtains")
                        .HasColumnType("bit");

                    b.Property<int?>("TransmissionId")
                        .IsRequired()
                        .HasColumnName("Transmission_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Usa")
                        .HasColumnName("USA")
                        .HasColumnType("bit");

                    b.Property<int?>("Walk")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("Xenon")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BodyTypeId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CityId");

                    b.HasIndex("ColorId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("EngineCapacityId");

                    b.HasIndex("FuelTypeId");

                    b.HasIndex("GearboxId");

                    b.HasIndex("ModelId");

                    b.HasIndex("TransmissionId");

                    b.ToTable("TB_ADS");
                });

            modelBuilder.Entity("carshop.webui.Models.AdsImageUrls", b =>
                {
                    b.HasOne("carshop.webui.Models.TbAds", "Ads")
                        .WithMany("AdsImageUrls")
                        .HasForeignKey("AdsId");
                });

            modelBuilder.Entity("carshop.webui.Models.GeneralInfo", b =>
                {
                    b.HasOne("carshop.webui.Models.GeneralType", "Type")
                        .WithMany("GeneralInfo")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Gen_Name_General_Type");
                });

            modelBuilder.Entity("carshop.webui.Models.TbAds", b =>
                {
                    b.HasOne("carshop.webui.Models.GeneralInfo", "BodyType")
                        .WithMany("TbAdsBodyType")
                        .HasForeignKey("BodyTypeId")
                        .HasConstraintName("FK_TB_ADS_Body_TB_ADS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("carshop.webui.Models.CarBrands", "Brand")
                        .WithMany("TbAds")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK_TB_ADS_Car_Brands")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("carshop.webui.Models.GeneralInfo", "City")
                        .WithMany("TbAdsCity")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_TB_ADS_City_General_Type1")
                        .IsRequired();

                    b.HasOne("carshop.webui.Models.GeneralInfo", "Color")
                        .WithMany("TbAdsColor")
                        .HasForeignKey("ColorId")
                        .HasConstraintName("FK_TB_ADS_Color_General_Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("carshop.webui.Models.GeneralInfo", "Currency")
                        .WithMany("TbAdsCurrency")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_TB_ADS_Currency")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("carshop.webui.Models.GeneralInfo", "EngineCapacity")
                        .WithMany("TbAdsEngineCapacity")
                        .HasForeignKey("EngineCapacityId")
                        .HasConstraintName("FK_TB_ADS_Engine_General_Type1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("carshop.webui.Models.GeneralInfo", "FuelType")
                        .WithMany("TbAdsFuelType")
                        .HasForeignKey("FuelTypeId")
                        .HasConstraintName("FK_TB_ADS_Fuel_General_Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("carshop.webui.Models.GeneralInfo", "Gearbox")
                        .WithMany("TbAdsGearbox")
                        .HasForeignKey("GearboxId")
                        .HasConstraintName("FK_TB_ADS_Gearbox_General_Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("carshop.webui.Models.CarModels", "Model")
                        .WithMany("TbAds")
                        .HasForeignKey("ModelId")
                        .HasConstraintName("FK_TB_ADS_Model_Car_Models")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("carshop.webui.Models.GeneralInfo", "Transmission")
                        .WithMany("TbAdsTransmission")
                        .HasForeignKey("TransmissionId")
                        .HasConstraintName("FK_TB_ADS_Transmission_General_Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
